{-# OPTIONS --cubical --allow-unsolved-metas #-}

module SemanticsPi2 where

open import SyntaxPi2
open import GroupoidLawsT
open import Cubical.Data.Bool
open import Cubical.Core.Everything
open import Cubical.Foundations.Prelude
open import Cubical.Foundations.Isomorphism renaming (Iso to _‚âÖ_)


‚ü¶_‚üß : Œ†‚ÇÇ ‚Üí Type
‚ü¶ ùüö ‚üß = Bool

id-path : ‚àÄ {‚Ñì} {T : Type ‚Ñì} ‚Üí T ‚â° T
id-path = refl

not-path : Bool ‚â° Bool
not-path = isoToPath (iso not not rem rem)
  where
    rem : (b : Bool) ‚Üí not (not b) ‚â° b
    rem false = refl
    rem true  = refl

-- funExt?
!notp=notp : sym not-path ‚â° not-path
!notp=notp = {!!}

module _ where private
  ptws : (b : Bool) ‚Üí transport (sym not-path) b ‚â° not b
  ptws = Œª _ ‚Üí refl

  _ : transport (sym not-path) ‚â° not
  _ = funExt ptws



-- _to_‚ü¶_‚üß‚ÇÅ ?
_‚ü¶_‚üß‚ÇÅ : {A B : Œ†‚ÇÇ} (i : I) (c : A ‚Üî B) ‚Üí ‚ü¶ A ‚üß ‚â° ‚ü¶ B ‚üß
i ‚ü¶ `id‚ÇÅ ‚üß‚ÇÅ   = id-path
i ‚ü¶ `not ‚üß‚ÇÅ   = not-path
i ‚ü¶ !‚ÇÅ c ‚üß‚ÇÅ   = sym (i ‚ü¶ c ‚üß‚ÇÅ)
i ‚ü¶ p ‚äô q ‚üß‚ÇÅ  = (i ‚ü¶ p ‚üß‚ÇÅ) ‚àô (i ‚ü¶ q ‚üß‚ÇÅ)
i ‚ü¶ sqrt c ‚üß‚ÇÅ = {!!} -- need a semantics model


_‚ü¶_‚üß‚ÇÇ : {A B : Œ†‚ÇÇ} (i : I) {p q : A ‚Üî B}
      ‚Üí (p ‚áî q) ‚Üí (i ‚ü¶ p ‚üß‚ÇÅ) ‚â° (i ‚ü¶ q ‚üß‚ÇÅ)
i ‚ü¶ `id‚ÇÇ ‚üß‚ÇÇ     = refl
i ‚ü¶ !‚ÇÇ t ‚üß‚ÇÇ     = sym (i ‚ü¶ t ‚üß‚ÇÇ)
i ‚ü¶ t‚ÇÅ ‚äô‚ÇÇ t‚ÇÇ ‚üß‚ÇÇ = (i ‚ü¶ t‚ÇÅ ‚üß‚ÇÇ) ‚àô (i ‚ü¶ t‚ÇÇ ‚üß‚ÇÇ)
i ‚ü¶ sqd ‚üß‚ÇÇ      = {!!}
i ‚ü¶ sqf ‚üß‚ÇÇ      = {!!}
i ‚ü¶ sqi t ‚üß‚ÇÇ    = {!!}
i ‚ü¶ sqc ‚üß‚ÇÇ      = {!!}
i ‚ü¶ sq! ‚üß‚ÇÇ      = {!!}
i ‚ü¶ idl‚äôl ‚üß‚ÇÇ    = sym lUnitT           -- refl ‚àô p ‚â° p
i ‚ü¶ idr‚äôl ‚üß‚ÇÇ    = sym rUnitT           -- p ‚àô refl ‚â° p
i ‚ü¶ !r p ‚üß‚ÇÇ     = rCancelT (i ‚ü¶ p ‚üß‚ÇÅ)  -- p ‚àô (sym p) ‚â° refl
i ‚ü¶ !l p ‚üß‚ÇÇ     = lCancelT (i ‚ü¶ p ‚üß‚ÇÅ)  -- (sym p) ‚àô p ‚â° refl
i ‚ü¶ assoc‚äôl ‚üß‚ÇÇ  = assocT
i ‚ü¶ assoc‚äôr ‚üß‚ÇÇ  = sym assocT
i ‚ü¶ t‚ÇÅ ‚ñ£ t‚ÇÇ ‚üß‚ÇÇ  = (i ‚ü¶ t‚ÇÅ ‚üß‚ÇÇ) ‚óæ (i ‚ü¶ t‚ÇÇ ‚üß‚ÇÇ) -- p ‚â° q ‚Üí r ‚â° s ‚Üí p ‚àô r ‚â° q ‚àô s
i ‚ü¶ !id‚ÇÅ ‚üß‚ÇÇ     = refl
i ‚ü¶ !not ‚üß‚ÇÇ     = !notp=notp           -- (sym not-path) ‚â° not-path
i ‚ü¶ !! ‚üß‚ÇÇ       = refl
i ‚ü¶ `! t ‚üß‚ÇÇ     = cong sym (i ‚ü¶ t ‚üß‚ÇÇ)
